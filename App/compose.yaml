services:
  database:
    container_name: postgresql_database
    image: postgres:17.0
    restart: unless-stopped
    env_file:
      - project.env
    ports: # TODO: comment out later
      - 5432:5432 # Only for development/debugging
    volumes:
      - ./data-preparation/data:/data #let's keep this, so we can do manual inserts also

  database-migrations:
    image: flyway/flyway:10
    env_file:
      - project.env
    depends_on:
      - database
      - data-preparation  # Ensure data-preparation runs before migrations
    volumes:
      - ./database-migrations:/flyway/sql
    command: -connectRetries=60 -baselineOnMigrate=true migrate
      
  client:
    build: client
    restart: unless-stopped
    volumes:
      - ./client:/app
    ports:
      - 5173:5173
    depends_on:
      - server

  e2e-tests:
    entrypoint: "/bin/true"
    build: e2e-tests
    network_mode: host
    depends_on:
      - client
    volumes:
      - ./e2e-tests/tests:/app.tests

  server:
    build:
      context: ./python-server  # Updated to point to the python-server directory
    restart: unless-stopped
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ./python-server:/app
    ports:
      - 8000:8000
    env_file:
      - project.env
    depends_on:
      - database

  chat-engine:
    container_name: chat-engine
    build:
      context: .
      dockerfile: chat-engine/Dockerfile
    volumes:
      - type: bind
        source: ./chat-engine/.ollama
        target: /root/.ollama
    ports:
      - 7860:7860
    restart: always
    profiles:
      - chat-engine

  data-preparation:
    build:
      context: ./data-preparation/scripts  # Path to the directory containing the Dockerfile
    volumes:
      - ./data-preparation/data:/data  # Mount the data folder
      - ./data-preparation/scripts:/scripts  # Mount the scripts folder
    working_dir: /scripts  # Set the working directory to the scripts folder
    env_file:
      - ./project.env  # Load environment variables
    entrypoint: >
      bash -c "
      ./get_porssisahko_data.sh &&
      ./prepare_porssisahko_data.sh ../data/porssisahko.xlsx
      "
