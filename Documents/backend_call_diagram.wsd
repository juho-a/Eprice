@startuml
title Class Diagram for FastAPI Server-side authentication
package "FastAPI Authentication" {
    class User {
        + email: str
        + password: str
        + role: str = "user"
    }

    class AuthService {
        - user_repository: UserRepository
        - pwd_context: CryptContext
        + get_password_hash(password: str): str
        + verify_password(plain_password: str, hashed_password: str): bool
        + create_access_token(data: dict, expires_delta: timedelta = None): str
        + authenticate_user(email: str, password: str): User | None
        + register_user(email: str, password: str): None
    }

    class UserRepository {
        - database_url: str
        + get_user_by_email(email: str): dict | None
        + create_user(email: str, password_hash: str): None
    }

    class Config {
        + DATABASE_URL: str
        + JWT_SECRET: str
        + ALGORITHM: str
        + COOKIE_KEY: str
        + ACCESS_TOKEN_EXPIRE_MINUTES: int
    }

    class AuthController {
        + POST /api/auth/register(user: User, response: Response): dict
        + POST /api/auth/login(user: User, response: Response): dict
        + GET /api/auth/logout(response: Response): dict
        + create_jwt_middleware(public_routes: list): Callable
    }
}

class SvelteClient {
    + Calls FastAPI server on port 8000
    + Consumes endpoints like /api/auth/register, /api/auth/login
}

AuthService --> UserRepository : uses
AuthService --> User : returns
UserRepository --> User : returns
Config ..> AuthService : provides configuration
Config ..> UserRepository : provides configuration
AuthController --> AuthService : uses
AuthController --> Config : uses
SvelteClient --> AuthController : makes API calls

' Add notes to indicate server responses
note right of AuthController
- Responds with JSON messages
- Sends Set-Cookie headers
- JWT payload is stored in the cookie
end note

@enduml