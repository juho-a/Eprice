{
    "openapi": "3.1.0",
    "info": {
        "title": "FastAPI",
        "version": "0.1.0"
    },
    "paths": {
        "/api/public/windpower": {
            "get": {
                "summary": "Get Windpower",
                "description": "Get wind power production forecast.\nFetches forecast data from Fingrid dataset ID 245.\n\nReturns:\n    list[dict] | dict: A list of data points or an error message.",
                "operationId": "get_windpower_api_public_windpower_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RootModel_DataPoint_"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/windpower/range": {
            "post": {
                "summary": "Post Windpower Range",
                "description": "Get wind power production data for a given time range.\nFetches data from Fingrid dataset ID 245.\n\nArgs:\n    time_range (TimeRangeRequest): Start and end time in RFC 3339 format.\n\nReturns:\n    list[dict] | dict: A list of data points or an error message.",
                "operationId": "post_windpower_range_api_public_windpower_range_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TimeRangeRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RootModel_List_DataPoint__"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/consumption": {
            "get": {
                "summary": "Get Consumption",
                "description": "Get electricity consumption forecast.\nFetches consumption data from Fingrid dataset ID 165.\n\nReturns:\n    list[dict] | dict: A list of data points or an error message.",
                "operationId": "get_consumption_api_public_consumption_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RootModel_DataPoint_"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/consumption/range": {
            "post": {
                "summary": "Post Consumption Range",
                "description": "Get electricity consumption data for a given time range.\nFetches consumption data from Fingrid dataset ID 165.\n\nArgs:\n    time_range (TimeRangeRequest): Start and end time in RFC 3339 format.\n\nReturns:\n    list[dict] | dict: A list of data points or an error message.",
                "operationId": "post_consumption_range_api_public_consumption_range_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TimeRangeRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RootModel_List_DataPoint__"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/production": {
            "get": {
                "summary": "Get Production",
                "description": "Get electricity production forecast.\nFetches production data from Fingrid dataset ID 241.\n\nReturns:\n    list[dict] | dict: A list of data points or an error message.",
                "operationId": "get_production_api_public_production_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RootModel_DataPoint_"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/production/range": {
            "post": {
                "summary": "Post Production Range",
                "description": "Get electricity production data for a given time range.\nFetches production data from Fingrid dataset ID 241.\n\nArgs:\n    time_range (TimeRangeRequest): Start and end time in RFC 3339 format.\n\nReturns:\n    list[dict] | dict: A list of data points or an error message.",
                "operationId": "post_production_range_api_public_production_range_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TimeRangeRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RootModel_List_DataPoint__"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/data": {
            "get": {
                "summary": "Get Prices",
                "description": "Get hourly electricity prices from external API.\n\nFetches latest hourly prices and formats them for charting.\n\nReturns:\n    dict: Contains chart legend, type, values (snt/kWh), labels (hours), and status message.",
                "operationId": "get_prices_api_public_data_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RootModel_DataPoint_"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/public/weather": {
            "get": {
                "summary": "Get Weather",
                "description": "Get weather forecast for a specific UTC time and location.\nFetches weather forecast data from the MET API.\n\nArgs:\n    lat (float): Latitude.\n    lon (float): Longitude.\n    timestamp (str): UTC datetime in RFC 3339 format (e.g., 2024-05-05T13:30:00Z).\n\nReturns:\n    dict: Weather forecast data or an error message.",
                "operationId": "get_weather_api_public_weather_get",
                "parameters": [
                    {
                        "name": "lat",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "title": "Lat"
                        }
                    },
                    {
                        "name": "lon",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "title": "Lon"
                        }
                    },
                    {
                        "name": "timestamp",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "description": "UTC datetime in RFC 3339 format, e.g. 2024-05-05T13:30:00Z",
                            "title": "Timestamp"
                        },
                        "description": "UTC datetime in RFC 3339 format, e.g. 2024-05-05T13:30:00Z"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/register": {
            "post": {
                "summary": "Register",
                "operationId": "register_api_auth_register_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "summary": "Login",
                "operationId": "login_api_auth_login_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/logout": {
            "get": {
                "summary": "Logout",
                "operationId": "logout_api_auth_logout_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/data": {
            "get": {
                "summary": "Get Data",
                "description": "Example data endpoint\nReturns:\n    dict: A dictionary containing example data for the chart.\n    dict has the following keys:\n        - chartType: str, type of chart (e.g., 'bar', 'line', etc.), default is 'bar'\n        - chartValues: list of int\n        - chartLabels: list of str\n\n            chartValues = [20, 10, 5, 2, 20, 30, 45];\n            chartLabels = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];",
                "operationId": "get_data_api_data_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "DataPoint": {
                "properties": {
                    "startTime": {
                        "type": "string",
                        "title": "Starttime",
                        "example": "2025-05-08T04:00:00.000Z"
                    },
                    "endTime": {
                        "type": "string",
                        "title": "Endtime",
                        "example": "2025-05-08T04:15:00.000Z"
                    },
                    "value": {
                        "type": "number",
                        "title": "Value",
                        "example": 7883.61
                    }
                },
                "type": "object",
                "required": [
                    "startTime",
                    "endTime",
                    "value"
                ],
                "title": "DataPoint"
            },
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "RootModel_DataPoint_": {
                "$ref": "#/components/schemas/DataPoint",
                "title": "RootModel[DataPoint]"
            },
            "RootModel_List_DataPoint__": {
                "items": {
                    "$ref": "#/components/schemas/DataPoint"
                },
                "type": "array",
                "title": "RootModel[List[DataPoint]]"
            },
            "TimeRangeRequest": {
                "properties": {
                    "startTime": {
                        "type": "string",
                        "title": "Starttime",
                        "description": "Start time in RFC 3339 format (e.g., 2024-05-01T00:00:00Z)",
                        "example": "2024-05-01T00:00:00Z"
                    },
                    "endTime": {
                        "type": "string",
                        "title": "Endtime",
                        "description": "End time in RFC 3339 format (e.g., 2024-05-02T00:00:00Z)",
                        "example": "2024-05-02T00:00:00Z"
                    }
                },
                "type": "object",
                "required": [
                    "startTime",
                    "endTime"
                ],
                "title": "TimeRangeRequest"
            },
            "User": {
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "title": "Email"
                    },
                    "password": {
                        "type": "string",
                        "title": "Password"
                    }
                },
                "type": "object",
                "required": [
                    "email",
                    "password"
                ],
                "title": "User"
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "title": "Message"
                    },
                    "type": {
                        "type": "string",
                        "title": "Error Type"
                    }
                },
                "type": "object",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError"
            }
        }
    }
}